name: .NET build & deploy VehicleManagementSystem

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
      
      #publish VehicleManagement
      #publish VehicleManagement.API
    - name: Publish VehicleManagement.API
      run: |
        dotnet publish VehicleManagement/VehicleManagement.API/VehicleManagement.API.csproj -c Release -o $GITHUB_WORKSPACE/VehicleManagement.API
        cd $GITHUB_WORKSPACE 
        zip -r VehicleManagement.API.zip cd VehicleManagement.API
    
      #publish VehicleManagement.Application
    - name: Publish VehicleManagement.Application
      run: | 
        dotnet publish VehicleManagement/VehicleManagement.Application/VehicleManagement.Application.csproj -c Release -o $GITHUB_WORKSPACE/VehicleManagement.Application 
        cd $GITHUB_WORKSPACE
        zip -r VehicleManagement.Application.zip VehicleManagement.Application
      
      #publish VehicleManagement.Core
    - name: Publish VehicleManagement.Core
      run: | 
        dotnet publish VehicleManagement/VehicleManagement.Core/VehicleManagement.Core.csproj -c Release -o $GITHUB_WORKSPACE/VehicleManagement.Core
        cd $GITHUB_WORKSPACE
        zip -r VehicleManagement.Core.zip VehicleManagement.Core

      #publish VehicleManagement.DataAccess
    - name: Publish VehicleManagement.DataAccess
      run: | 
        dotnet publish VehicleManagement/VehicleManagement.DataAccess/VehicleManagement.DataAccess.csproj -c Release -o $GITHUB_WORKSPACE/VehicleManagement.DataAccess
        cd $GITHUB_WORKSPACE
        zip -r VehicleManagement.DataAccess.zip VehicleManagement.DataAccess

      # publish VehicleManagement.Web 

    - name: Publish VehicleManagement.Web
      run: | 
        dotnet publish WebUI/VehicleManagement.Web/VehicleManagement.Web.csproj -c Release -o $GITHUB_WORKSPACE/VehicleManagement.Web
        cd $GITHUB_WORKSPACE
        zip -r VehicleManagement.Web.zip VehicleManagement.Web 

      #Upload Ferry-Management-System-Zip Artifact
    - name: Upload Vehicle-Management-System-Zip Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: Vehicle-Management-System-Zip
        path: /home/runner/work/Vehicle-Management-System/Vehicle-Management-System/*.zip
        if-no-files-found: error

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Vehicle-Management-System-Zip Artifact
        uses: actions/download-artifact@v2
        with:
          name: Vehicle-Management-System-Zip 

      - name: Copy via ssh 
        uses: garygrossgarten/github-action-scp@v0.8.0
        with:
          local: /home/runner/work/Vehicle-Management-System/Vehicle-Management-System
          remote: /home/azureuser/Vehicle-Management-System-Zip
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          script: cd && bash vehiclescript.sh
